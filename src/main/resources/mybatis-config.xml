<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
 PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-config.dtd">
<!-- window->preferences->XML->XMLCatalog->Add->URI添加dtd约束 -->
<configuration>
	<!-- 
		1.properties：了解即可，与spring整合时使用spring来引入外部文件
		mybatis可以使用properties来引入外部properties配置文件的内容
		resource：引入类路径下的资源
		url：引入网络路径或者磁盘路径下的资源
	 -->
	<properties resource="properties/dbconfig.properties"></properties>
	
	<!-- 
		2.settings：包含很多重要的设置项
			setting：用来设置每一个设置项
		mapUnderscoreToCamelCase：开启驼峰命名，映射数据库字段到bean时自动驼峰映射
	 -->
	<settings>
		<setting name="mapUnderscoreToCamelCase" value="true"/>
		<setting name="jdbcTypeForNull" value="NULL"/>
		
		<!-- 开启懒加载 -->
		<setting name="lazyLoadingEnabled" value="true"/>
		<setting name="aggressiveLazyLoading" value="false"/>
	</settings>
	
	<!-- 3.typeAliases：别名处理器，可以为我们的java类型起别名，别名不区分大小写 -->
	<typeAliases>
		<!-- 
			typeAlias：为某一个java类型起别名
			type：指定要起别名的类型全类名，默认就是类名小写
			alias：指定新的别名
		 -->
		<!-- <typeAlias type="com.important.HelloWorld.bean.Employee"/> -->
		
		<!-- 批量起别名，本包及子包 -->
		<package name="com.important.HelloWorld.bean"/>
		
		<!-- 批量起别名的情况下也可以使用@Alias注解为某个类指定新的别名 -->
	</typeAliases>
	
	<!-- 
		4.environments：mybatis可以配置多种环境，default可以指定使用某种环境.
		     environment：配置一个具体的环境信息，必须有两个标签，id代表当前环境的唯一标识.
		     	transactionManager：事务管理器
		     		type：事务管理器类型；JDBC(JdbcTransactionFactory)|MANAGED(ManagedTransactionFactory)，可以自定义事务管理器
		     	dataSource：数据源
		     		type：数据源类型；UNPOOLED|POOLED|JNDI，可以自定义数据源
	 -->
	<environments default="mysql_dev">
		<environment id="mysql_dev">
			<transactionManager type="JDBC" />
			<dataSource type="POOLED">
				<property name="driver" value="${jdbc.driver}" />
				<property name="url" value="${jdbc.url}" />
				<property name="username" value="${jdbc.username}" />
				<property name="password" value="${jdbc.password}" />
			</dataSource>
		</environment>
		<environment id="oracle_dev">
			<transactionManager type="JDBC" />
			<dataSource type="POOLED">
				<property name="driver" value="${orcl.driver}" />
				<property name="url" value="${orcl.url}" />
				<property name="username" value="${orcl.username}" />
				<property name="password" value="${orcl.password}" />
			</dataSource>
		</environment>
	</environments>
	
	<!-- 
		5.databaseIdProvider：支持多数据库厂商
		type="DB_VENDOR"：作用就是得到数据库厂商的标识（驱动getDatabaseProductName()），mybatis就能根据数据库厂商的标识来执行不同的sql;
		MySQL Oracle
	-->
	<databaseIdProvider type="DB_VENDOR">
		<!-- 为不同的数据库厂商起别名 -->
		<property name="MySQL" value="mysql"/>
		<property name="Oracle" value="oracle"/>
	</databaseIdProvider>
	
	<!-- 
		6.将我们写好的sql映射文件（EmployeeMapper.xml）一定要注册到全局配置文件（mybatis-config.xml）中.
			resource：引用类路径下的sql映射文件
			class：引用接口
				1）、有sql映射文件，映射文件名必须和接口同名，并且放在与接口同一目录下
				2）、没有sql映射文件，所有的sql都是利用注解写在接口上
				推荐：sql映射文件
				3）、批量注册（映射文件名必须和接口同名，并且放在与接口同一目录下）
	 -->
	<mappers>
		<!-- 
		<mapper resource="mapper/EmployeeMapper.xml" />
		<mapper class="com.important.HelloWorld.dao.EmployeeMapperAnnotation"/>
		 -->
		 
		 <!-- 批量注册 -->
		<package name="com.important.HelloWorld.dao"/>
	</mappers>
</configuration>