<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.important.HelloWorld.dao.EmployeeMapper">
	<!-- namespace:命名空间;指定为接口的全类名 
		 id：唯一标识 
		 resultType：返回值类型 
		 #{id}：从传递过来的参数中取出id值 
		public Employee getEmpById(Integer id); -->
	<select id="getEmpById" resultType="com.important.HelloWorld.bean.Employee" databaseId="mysql">
		select * from tbl_employee where id = #{id}
	</select>
	<select id="getEmpById" resultType="com.important.HelloWorld.bean.Employee" databaseId="oracle">
		select * from tm_employee where id = #{id}
	</select>

	<!-- parameterType可以省略
	     mybatis也是利用statement.getGeneratedKeys()来获取自增主键 
			useGeneratedKeys：使用自增主键获取主键值策略
			keyProperty：mybatis获取到主键值后，将这个值封装给javabean的哪个属性
	-->
	<!-- public void addEmp(Employee employee); -->
	<insert id="addEmp"
		parameterType="com.important.HelloWorld.bean.Employee"
		useGeneratedKeys="true" keyProperty="id" databaseId="mysql">
		insert into tbl_employee(last_name,email,gender)
		values(#{lastName},#{email},#{gender})
	</insert>
	<!-- 
		resultType：查出的数据的返回值类型
		BEFORE：先运行selectKey查询id的sql，查出id值封装给javaBean的id属性
				在运行插入的sql，就可以取出id属性对应的值
	 -->
	<insert id="addEmp" databaseId="oracle">
		<selectKey keyProperty="id" order="BEFORE"
			resultType="Integer">
			<!-- 编写查询主键的sql语句 -->
			select EMPLOYEES_SEQ.nextval from dual
		</selectKey>
		<!-- 插入的主键是从序列中拿到的 -->
		insert into employees(EMPLOYEE_ID,LAST_NAME,EMAIL)
		values(#{id},#{lastName},#{email})
	</insert>

	<!-- public void updateEmp(Employee employee); -->
	<update id="updateEmp">
		update tbl_employee set last_name = #{lastName},
		email=#{email}, gender=#{gender} where id = #{id}
	</update>
	
	<!-- public void deleteEmpById(Integer id); -->
	<delete id="deleteEmpById">
		delete from tbl_employee where id = #{id}
	</delete>
</mapper>